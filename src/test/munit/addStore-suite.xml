<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="addStore-suite.xml" />
	<munit:test name="addStoreFlow-test-success" doc:id="260d3890-653d-4073-9c9e-ad0e717499a3" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="4f7dcafe-2900-4b85-886f-5930b7e5acd3" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e2c666bd-a419-4948-890f-17f761087eb8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://addStoreFlowtestsuccess\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="de43237b-36cb-4aad-94d6-6250b1ac617b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://addStoreFlowtestsuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://addStoreFlowtestsuccess\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to addStoreFlow" doc:id="d08dcece-009c-4d0c-8256-a05d72984e9e" name="addStoreFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="86580eeb-8536-4595-a3e7-7a2c31f93054" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import addStoreFlowtestsuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Set Payload" doc:id="3b6f1397-8ecc-46e7-abac-f12479d1a1de" processor="set-payload" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d89b5872-a543-4b23-a67c-ae7dcf3afbb5" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="61ef0593-d84a-4477-a64e-c2f5cadb57aa" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fd2f4b3c-6ffa-4c9f-908c-9f6259049dda" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="faaddd05-738e-4a69-bfbc-7e4d3613739b" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0dd92373-50fa-4c52-a8a6-1f0bfd3c2343" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
